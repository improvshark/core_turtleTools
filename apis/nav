
wayPointPath = core.coreDir() .. '/modules/turtleTools/apis/.wayPoints'

local function saveWaypoints(points)
	core.loadConfig(wayPointPath, points)
end

local function loadWaypoints()
	core.loadConfig(wayPointPath)
end

function addWaypoint(wayPointTable, nameArg, coordVector, directionArg )
	if wayPointTable == nil or n == nil or c == nil then return false end
	point ={}
	point.name = nameArg
	point.coord = coordVector
	if directionArg ~= nil then point.direction = directionArg end
	table.insert (wayPointTable, point)
	return core.saveConfig(wayPointPath)
end


function turn(f)
	while f ~= tonumber(pos.getPosition().direction) do
		pos.turnRight()
	end
end

function moveTowardsX(x, agressive)
	currentX = pos.getX()
	if x > currentX then
		turn(3)
	elseif x < currentX then
		turn(1)
	end
	return pos.forward(1,agressive)
end

function moveTowardsZ(z, agressive)
		currentZ = pos.getZ()
		if z > currentZ then
			turn(0)
		elseif z < currentZ then
			turn(2)
		end
		return pos.forward(1, agressive)
end

function moveTowardsY(y, agressive)
		currentY = pos.getY()
		if y > currentY then
			return pos.up(1, agressive)
		elseif y < currentY then
			return pos.down(1, agressive)
		end
end

function gotoX(x, agressive)
	while pos.getX() ~= x do
		moveTowardsX(x,agressive)
	end
end

function gotoY(y, agressive)
	while pos.getY() ~= y do
		moveTowardsY(y,agressive)
	end
end

function gotoZ(z, agressive)
	while pos.getZ() ~= z do
		moveTowardsZ(z,agressive)
	end
end


function gotoPos(obj, agressive)
	repeat
		gotoX(obj.coord.x, agressive)
		gotoZ(obj.coord.z, agressive)
		gotoY(obj.coord.y, agressive)
	until obj.coord.x == pos.getX() and obj.coord.y == pos.getY() and obj.coord.z == pos.getZ()

	if obj.direction ~= nil then turn(obj.direction) end
end

function gotoPosRand(obj, agressive)
	repeat
		randNum = math.random(1,3)
		if randNum == 1 then moveTowardsX(obj.coord.x, agressive)
		elseif randNum == 2 then moveTowardsY(obj.coord.y, agressive)
		elseif randNum == 3 then moveTowardsZ(obj.coord.z, agressive) end
	until obj.coord.x == pos.getX() and obj.coord.y == pos.getY() and obj.coord.z == pos.getZ()

	if obj.direction ~= nil then turn(obj.direction) end
end
