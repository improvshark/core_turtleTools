

function stepUp4()
	pos.up(2, true)
	while turtle.detectUp() do turtle.digUp() end
	pos.forward(1, true)
	pos.down(1, true)
	if not turtle.detectDown() then place() end
end

function stepDown4()
	pos.up(1, true)
	while turtle.detectUp() do turtle.digUp() end
	pos.forward(1,true)
	while turtle.detectUp() do turtle.digUp() end
	pos.down(2, true)
	if not turtle.detectDown() then place() end
end

function stepUp3()
	pos.up(1, true)
	while turtle.detect() do turtle.dig() end
	while turtle.detectUp() do turtle.digUp() end
	pos.forward(1,true)
	if not turtle.detectDown() then place() end
	while turtle.detectUp() do turtle.digUp() end
end

function stepDown3()
	while turtle.detectUp() do turtle.digUp() end
	pos.forward(1, true)
	while turtle.detectUp() do turtle.digUp() end
	while turtle.detect() do turtle.dig() end
	pos.down(1, true)
	if not turtle.detectDown() then place() end
end

function place()
	currentSlot = turtle.getSelectedSlot()
	for i = 1, 16 do
		if turtle.getItemCount(i) > 0 then
			if turtle.placeDown() then break end
		end
	end
	turtle.select(currentSlot)
end


function checkForApi()
	if not pos then
		error( " pos API  not loaded on computer" )
		return false
	else
		return true
	end
end




arg = {...}

if not checkForApi() then return end

if arg[1] == nil then
	print('useage:')
	print('stair <up/down> <hight> - 3 high staircase')
	print('stair <up2/down2> <hight> - 4 high staircase')

elseif arg[1] == 'up' and tonumber(arg[2]) ~= nil then
	for i = 1, arg[2] do
		stepUp3()
	end
elseif arg[1] == 'down' and tonumber(arg[2]) ~= nil then
	for i = 1, arg[2] do
		stepDown3()
	end
elseif arg[1] == 'up2' and tonumber(arg[2]) ~= nil then
	for i = 1, arg[2] do
		stepUp4()
	end
elseif arg[1] == 'down2' and tonumber(arg[2]) ~= nil then
	for i = 1, arg[2] do
		stepDown4()
	end
else
	print('unknown command')
	print('useage:')
	print('stair <up/down> <hight> - 3 high staircase')
	print('stair <up2/down2> <hight> - 4 high staircase')
end